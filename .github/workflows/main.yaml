name: Main CI/CD

on:
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - dev
      - master

jobs:
  e2e_tests:
    needs: [backend_tests, frontend_tests]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Docker Compose
        run: docker-compose -f ../compose.yml up -d database auth_server backend frontend
      - name: Run tests
        run: cd backend && mvn test -Dtest=E2e.*

  backend_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set java 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: maven
      - name: Run tests
        run: cd backend && mvn --batch-mode --update-snapshots verify
        env:
          AUTH_SERVER_JWKS_URL: ${{ env.AUTH_SERVER_JWKS_URL }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_URL: ${{ env.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  frontend_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: "16"
      - name: Run tests
        run: cd frontend && npm ci && npm run build --if-present && npm run test
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true